
const Tool = {}

/**
 * [处理表格数据]
 * @param {[Array]}  list 表格数组
 * @param {[String]} yjts 预警时间
 * @param {[String]} name 子属性名称
 */
Tool.mapData = function (list, yjts = 10, name = '') {
  const that = this
  /* 当前日期 */
  const d = new Date()
  const year = d.getFullYear()
  const month = d.getMonth() + 1 < 10 ? '0' + (d.getMonth() + 1) : d.getMonth() + 1
  const day = d.getDate() < 10 ? '0' + d.getDate() : d.getDate()
  const now = new Date(`${year}-${month}-${day}`).getTime() // 毫秒数
  /* 循环数据 */
  list.map(function (item, index) {
    /* ----- 处理岗位 ----- */
    const { itemPostEmpListItem = [] } = item
    if (itemPostEmpListItem.length) {
      itemPostEmpListItem.forEach(business => {
        item['business_' + business.business_post_id] = business.group_emp_name
      })
    }
    /* ----- 处理节点 ----- */
    item.index = index
    if (name) {
      let arr = []
      /* 处理子属性 */
      if (item[name] && item[name] !== null && item[name].length) {
        arr = item[name]
      }
      arr.map(function (val) {
        const { actual_enddate } = val
        const completeTime = typeof actual_enddate === 'string' && actual_enddate ? new Date(actual_enddate.split(' ')[0]).getTime() : now
        return that._map(val, completeTime, yjts)
      })
      return arr
    } else {
      /* 处理自身 */
      const { actual_enddate } = item
      const completeTime = typeof actual_enddate === 'string' && actual_enddate ? new Date(actual_enddate.split(' ')[0]).getTime() : now
      return that._map(item, completeTime, yjts)
    }
  })
  return list
}

/**
 * [处理节点]
 * @param  {[Object]} item         节点
 * @param  {[Int]}    completeTime 毫秒数（完成时间 || 当前时间）
 * @param  {[String]} yjts         预警时间
 * @return {[Object]} item         添加属性后的节点
 */
Tool._map = function (item, completeTime, yjts) {
  const { plan_enddate, actual_enddate, node_content_type = 'time' } = item
  if (node_content_type === 'time' && plan_enddate === '/') { /* ----- 时间节点：/ ----- */
    item.timeText = '/' //            延期/剩余天数
    item.wancheng = false //          节点名称 是否显示悬浮框
    item.nodeTypeText = '节点不存在' // 节点状态
    item.warningText = '' //          预警状态
    item.is_show_warning = false //   在 table 的节点中是否显示预警图标 !
  } else if (node_content_type === 'time' && typeof new Date(plan_enddate).getTime() === 'number') { /* ----- 时间节点：2020-09-09 ----- */
    /* 延期/剩余天数 */
    const num = (completeTime - new Date(plan_enddate).getTime()) / (1000 * 60 * 60 * 24) // 超期天数：当前日期 - 计划日期
    if (num > 0) {
      item.timeText = `<span style="color: red;">${isNaN(num) ? '/' : num}</span>` // 延期天数
    } else {
      item.timeText = `<span>${isNaN(num) ? '/' : Math.abs(num)}</span>` // 剩余天数
    }
    /* 节点状态 && 预警状态 */
    if (actual_enddate !== null && actual_enddate) { /* 节点状态：完成 [有完成时间] */
      item.wancheng = true
      if (num > 0) {
        item.nodeTypeText = `<span style="color: #2028E3;">超期完成</span>`
      } else if (num < 0) {
        item.nodeTypeText = `<span style="color: #67C23A;">提前完成</span>`
      } else if (num === 0) {
        item.nodeTypeText = `<span style="color: #67C23A;">完成</span>`
      }
      item.warningText = '<span>正常</span>'
    } else { /* 节点状态：未完成 */
      item.wancheng = false
      if (num > 0) { //         超期未完成 -> 常预警
        item.nodeTypeText = `<span style="color: #F56C6C;">超期未完成</span>`
        item.warningText = '<span style="color: #F56C6C;">预警</span>'
        item.is_show_warning = true
      } else if (num <= 0) { // 未完成 -> 倒计时预警
        item.nodeTypeText = `<span style="color: #909399;">未完成</span>`
        if (yjts && num >= parseInt(Math.abs(yjts))) { // 倒计时预警：超期天数 >= 预警时间
          item.warningText = '<span style="color: #F56C6C;">预警</span>'
          item.is_show_warning = true
        } else { //                                       倒计时预警：超期天数 < 预警时间 || 没有预警时间
          item.warningText = '<span>正常</span>'
        }
      } else {
        item.warningText = ''
        item.is_show_warning = false
      }
    }
  } else if (node_content_type === 'content') { /* ----- 文本节点 ----- */
    item.timeText = '/' //          延期/剩余天数
    item.wancheng = false //        节点名称 是否显示悬浮框
    item.nodeTypeText = '完成' //    节点状态
    item.warningText = '' //        预警状态
    item.is_show_warning = false // 在 table 的节点中是否显示预警图标 !
  }
  return item
}

//
//
//
//

/**
 * [禁用条件：完成节点]
 */
Tool._disabledComplete = function (choiceRow = {}) {
  const { item_node_id, completion_method, is_complete, adjustment_audit_result, audit_status, audit_content } = choiceRow
  const prov_1 = !item_node_id //                           没选中
  const prov_2 = String(completion_method) === '2' //       自动完成
  const prov_3 = String(is_complete) !== '0' //             完成
  const prov_4 = String(adjustment_audit_result) === '2' // 变更审核状态：变更审核中 +++
  const prov_5 = String(audit_status) === '1' //            提报状态：草稿中 +++
  const prov_6 = String(audit_status) === '2' //            提报状态：审核中 +++
  const prov_7 = audit_content === '作废' //                 审核状态 === '作废'
  return prov_1 || prov_2 || prov_3 || prov_4 || prov_5 || prov_6 || prov_7
}

/**
 * [禁用条件：节点跟进]
 */
Tool._disabledFollowUp = function (choiceRow = {}, cate = '') {
  const { item_node_id, audit_content } = choiceRow
  const prov_1 = !item_node_id //           没选中
  const prov_2 = audit_content === '作废' // 审核状态 === '作废'
  return prov_1 || prov_2
}

/**
 * [禁用条件：变更节点]
 */
Tool._disabledChange = function (choiceRow = {}) {
  const { item_node_id, adjustment_audit_result, audit_status, audit_content } = choiceRow
  const prov_1 = !item_node_id //                           没选中
  const prov_2 = String(adjustment_audit_result) === '2' // 变更审核状态：变更审核中
  const prov_3 = String(audit_status) === '1' //            提报状态：草稿中
  const prov_4 = String(audit_status) === '2' //            提报状态：审核中
  const prov_5 = audit_content === '作废' //                 审核状态 === '作废'
  return prov_1 || prov_2 || prov_3 || prov_4 || prov_5
}

/**
 * [禁用条件：取消完成]
 */
Tool._disabledCancel = function (choiceRow = {}) {
  const { item_node_id, completion_method, is_complete, adjustment_audit_result, audit_status, audit_content } = choiceRow
  const prov_1 = !item_node_id //                           没选中
  const prov_2 = String(completion_method) === '2' //       自动完成
  const prov_3 = String(is_complete) === '0' //             未完成
  const prov_4 = String(adjustment_audit_result) === '2' // 变更审核状态：变更审核中 +++
  const prov_5 = String(audit_status) === '1' //            提报状态：草稿中 +++
  const prov_6 = String(audit_status) === '2' //            提报状态：审核中 +++
  const prov_7 = audit_content === '作废' //                 审核状态 === '作废'
  return prov_1 || prov_2 || prov_3 || prov_4 || prov_5 || prov_6 || prov_7
}

/**
 * [禁用条件：调整完成比例]
 */
Tool._disabledTuneUp = function (choiceRow = {}) {
  const { item_node_id, node_complete_id, is_complete, adjustment_audit_result, audit_status, audit_content } = choiceRow
  const prov_1 = !item_node_id //                           没选中
  const prov_2 = !node_complete_id //                       没有'节点完成ID'
  const prov_3 = String(is_complete) === '0' //             未完成
  const prov_4 = String(adjustment_audit_result) === '2' // 变更审核状态：变更审核中 +++
  const prov_5 = String(audit_status) === '1' //            提报状态：草稿中 +++
  const prov_6 = String(audit_status) === '2' //            提报状态：审核中 +++
  const prov_7 = audit_content === '作废' //                 审核状态 === '作废'
  return prov_1 || prov_2 || prov_3 || prov_4 || prov_5 || prov_6 || prov_7
}

/**
 * [禁用条件：查看节点完成明细]
 */
Tool._disabledCompleteDetail = function (choiceRow = {}) {
  const { node_complete_id, is_complete } = choiceRow
  const prov_1 = !node_complete_id //           没有'节点完成ID'
  const prov_2 = String(is_complete) === '0' // 未完成
  return prov_1 || prov_2
}

export default Tool
